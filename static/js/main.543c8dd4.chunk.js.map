{"version":3,"sources":["store.js","components/Pagination/Pagination.jsx","components/UsersList.jsx","App.js","index.js"],"names":["store","createStore","state","action","type","users","payload","Pagination","usersPerPage","totalUsers","paginate","pageNumbers","i","Math","ceil","push","className","map","page","key","onClick","UsersList","user","id","name","surname","desc","App","useState","show","setShow","currentPage","setCurrentPage","useSelector","dispatch","useDispatch","usersFromApi","a","fetch","response","json","result","indexOfLastPost","indexOfFirstPost","currentUsers","slice","prevShow","then","data","length","pageNumber","ReactDOM","render","document","getElementById"],"mappings":"gOAmBaA,EAAQC,aAbL,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEG,MAAOF,EAAOG,QAAQD,QAG1B,QACE,OAAOH,KAbQ,CACnBG,MAAO,K,+BCmCME,G,MAlCI,SAAC,GAGlB,IAH8D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACxCC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,GAAK,EAC9DD,EAAYI,KAAKH,GAGnB,OACE,yBAAKI,UAAU,cACb,wBAAIA,UAAU,oBAEVL,EAAYM,KAAI,SAAAC,GAAI,OAClB,wBAAIC,IAAKD,EAAMF,UAAU,oBACvB,4BACEZ,KAAK,SACLgB,QAAS,kBAAMV,EAASQ,IACxBF,UAAU,kBAETE,WCWFG,EA9BG,SAAC,GAAD,IAAGhB,EAAH,EAAGA,MAAH,OAChB,wBAAIW,UAAU,eAEVX,EAAMY,KAAI,SAAAK,GAAI,OACZ,wBACEN,UAAU,kCACVG,IAAKG,EAAKC,IAEV,yBAAKP,UAAU,gBACb,uBAAGA,UAAU,eAAb,iBACaM,EAAKE,KADlB,YAC0BF,EAAKG,UAG/B,uBAAGT,UAAU,eAAeM,EAAKI,aCXhCC,EAAM,WAAO,IAAD,EACCC,oBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,OAEeF,mBAAS,GAFxB,mBAEhBG,EAFgB,KAEHC,EAFG,OAGAJ,mBAAS,GAAzBpB,EAHgB,oBAKjBH,EAAQ4B,aAAY,SAAA/B,GAAK,OAAIA,EAAMG,SACnC6B,EAAWC,cAEXC,EAAY,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,aADV,cACbC,EADa,gBAEEA,EAASC,OAFX,cAEbC,EAFa,yBAIZA,GAJY,2CAAH,qDAoBZC,EAAkBX,EAAcvB,EAChCmC,EAAmBD,EAAkBlC,EACrCoC,EAAevC,EAAMwC,MAAMF,EAAkBD,GAInD,OACE,6BACE,wBAAI1B,UAAU,mBAAd,SACA,4BACEZ,KAAK,SACLY,UAAU,iBACVI,QAzBY,WAChBU,GAAQ,SAAAgB,GAAQ,OAAKA,KACrBV,IACGW,MAAK,SAACC,GACLd,EACE,CACE9B,KAAM,aACNE,QAAS,CAAED,MAAO2C,UAqBpBnB,EAAO,aAAe,cAIxBA,EAEI,yBAAKb,UAAU,SACb,kBAAC,EAAD,CAAWX,MAAOuC,IAElB,kBAAC,EAAD,CACEpC,aAAcA,EACdC,WAAYJ,EAAM4C,OAClBvC,SAvBG,SAAAwC,GAAU,OAAIlB,EAAekB,OA2BpC,yBAAKlC,UAAU,qBAAf,+BCxDZmC,IAASC,OACP,kBAAC,IAAD,CAAUpD,MAAOA,GACf,kBAAC,EAAD,OAEFqD,SAASC,eAAe,W","file":"static/js/main.543c8dd4.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n  users: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'show_users':\n      return {\n        ...state,\n        users: action.payload.users,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, initialState);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n\nconst Pagination = ({ usersPerPage, totalUsers, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        {\n          pageNumbers.map(page => (\n            <li key={page} className=\"pagination__item\">\n              <button\n                type=\"button\"\n                onClick={() => paginate(page)}\n                className=\"ui teal button\"\n              >\n                {page}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  usersPerPage: PropTypes.number.isRequired,\n  totalUsers: PropTypes.number.isRequired,\n  paginate: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UsersList = ({ users }) => (\n  <ul className=\"users__list\">\n    {\n      users.map(user => (\n        <li\n          className=\"users__item ui vertical segment\"\n          key={user.id}\n        >\n          <div className=\"users__block\">\n            <p className=\"users__name\">\n              {`Name - ${user.name} ${user.surname}`}\n            </p>\n\n            <p className=\"users__desc\">{user.desc}</p>\n          </div>\n        </li>\n      ))\n    }\n  </ul>\n);\n\nUsersList.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    surname: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default UsersList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport Pagination from './components/Pagination/Pagination';\nimport UsersList from './components/UsersList';\n\nexport const App = () => {\n  const [show, setShow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(5);\n\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n\n  const usersFromApi = async() => {\n    const response = await fetch('./db.json');\n    const result = await response.json();\n\n    return result;\n  };\n\n  const showUsers = () => {\n    setShow(prevShow => !prevShow);\n    usersFromApi()\n      .then((data) => {\n        dispatch(\n          {\n            type: 'show_users',\n            payload: { users: data },\n          },\n        );\n      });\n  };\n\n  const indexOfLastPost = currentPage * usersPerPage;\n  const indexOfFirstPost = indexOfLastPost - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <h1 className=\"ui block header\">Users</h1>\n      <button\n        type=\"button\"\n        className=\"ui teal button\"\n        onClick={showUsers}\n      >\n        {\n          show ? 'Hide Users' : 'Show Users'\n        }\n      </button>\n      {\n        show\n          ? (\n            <div className=\"users\">\n              <UsersList users={currentUsers} />\n\n              <Pagination\n                usersPerPage={usersPerPage}\n                totalUsers={users.length}\n                paginate={paginate}\n              />\n            </div>\n          )\n          : <div className=\"ui raised segment\">Click button to see users</div>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}